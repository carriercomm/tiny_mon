<h2><%= t('.steps_for_health_check', :health_check => @health_check.name) %></h2>

<% if @steps.empty?  %>
  <p><%= t('.no_steps_defined') %></p>
<% else %>
  <table class="list">
    <thead>
      <tr>
        <th><%= t('.name') %></th>
        <th><%= t('.details') %></th>
        <th><%= t('.options') %></th>
      </tr>
    </thead>
    <tbody id="steps">
      <% @steps.each do |step| %>
        <tr id="order_<%= step.id %>">
          <td><%= step.class.name.gsub(/Step$/, '').titleize %></td>
          <td><div id="step_<%= step.id %>"><%= render_step_details(step) %></div></td>
          <td>
            <%= link_to_remote t('.edit'), :url => edit_account_site_health_check_step_path(@account, @site, @health_check, step), :update => "step_#{step.id}", :method => :get %> |
            <%= link_to t('.delete'), account_site_health_check_step_path(@account, @site, @health_check, step), :method => :delete, :confirm => t('.are_you_sure') %>
          </td>
        </tr>
      <% end %>
    </tbody>
  </table>
<% end %>

<%= javascript_tag %{
  Sortable.create('steps', {
    tag: 'tr',
    scroll: window,
    onUpdate: function() { new Ajax.Request('#{sort_account_site_health_check_steps_path(@account, @site, @health_check)}?authenticity_token=#{form_authenticity_token}', { method: "post", parameters: Sortable.serialize("steps", { name: 'step' }) }); }
  });
} %>

<h3><%= t('.add_step') %></h3>

<div id="new_step_container">
  <%= render :partial => "/steps/form", :locals => { :step => Step.new } %>
</div>
